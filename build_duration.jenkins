import java.util.concurrent.TimeUnit

def appendTimeToMessage(String message, long value, String unitText) {
  script {
    if (value == 0) {
      return message
    }

    def formatted = String.format("%2d", Math.abs(value))
    return "${message} ${formatted}${unitText}"
  }
}

def getBuildDurationDisplayText(int millis) {
  script {
    def message = ""
    long hours = TimeUnit.MILLISECONDS.toHours(millis);
    long minutes = TimeUnit.MILLISECONDS.toMinutes(millis) % TimeUnit.HOURS.toMinutes(1);
    long seconds = TimeUnit.MILLISECONDS.toSeconds(millis) % TimeUnit.MINUTES.toSeconds(1);

    message = appendTimeToMessage(message, hours, "h")
    message = appendTimeToMessage(message, minutes, "m")
    message = appendTimeToMessage(message, seconds, "s")

    return message
  }
}

def getJson(String url) {
  def response = httpRequest url: url, authentication: env.credentialsId
  def json = readJSON text: response.getContent()
  return json
}

def getLastCompletedBuild(String jobName) {
  return getJson("${env.serverAddress}/job/${jobName}/lastCompletedBuild/api/json?tree=result,url,duration")
}

pipeline {
  agent any

  environment {
    serverAddress = "http://172.26.156.24:8080"
    credentialsId = 'jenkins-bot'
  }

  options {
    timestamps()
  }

  stages {

    stage ('Do Something') {
      steps {
        script {
          def build = getLastCompletedBuild("test_pipeline")
          def duration = (int)build['duration']
          def converted = getBuildDurationDisplayText(duration)
          echo "[LOG] converted duration: ${converted}"
        }
      }
    }

  }
}