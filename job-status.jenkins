import groovy.json.JsonSlurper
import java.lang.Integer

def appendToSlackMessage(String jobDisplayName, String summary, String color) {
  slackAttachments = "${slackAttachments},{\"color\":\"${color}\", \"fields\": [ {\"value\":\"${jobDisplayName}\",\"short\": true}, {\"value\":\"${summary}\"}] }"
}

def addSlackMessageForNoTests(String jobDisplayName) {
  appendToSlackMessage(jobDisplayName, "No tests were recorded", "warning")
}

def addSlackMessageForTestFail(String jobDisplayName, String summary) {
  appendToSlackMessage(jobDisplayName, summary, "danger")
}

def addSlackMessageForTestSuccess(String jobDisplayName, String summary) {
  appendToSlackMessage(jobDisplayName, summary, "good")
}

def getTestSummary(Integer failCount, Integer skipCount, Integer totalCount) {
  return "Failed ${failCount}\tSkipped ${skipCount}\tTotal ${totalCount}"
}

def setSlackMessageForJob(String jobName, String jobDisplayName) {
  script {
    def response

    try {
      response = httpRequest url: "${env.serverAddress}/job/${jobName}/lastCompletedBuild/testReport/api/json", authentication: env.credentialsId
    } catch(Exception e) {
      addSlackMessageForNoTests(jobDisplayName)
      return
    }
    
    def tests = new JsonSlurper().parseText(response.getContent())
    def failCount = tests['failCount'] as Integer
    def passCount = tests['passCount'] as Integer
    def skipCount = tests['skipCount'] as Integer
    def totalCount = failCount + passCount + skipCount

    if (totalCount == 0) {
      addSlackMessageForNoTests(jobDisplayName)
      return
    }

    def testSummary = getTestSummary(failCount, skipCount, totalCount)

    if (failCount > 0) {
      addSlackMessageForTestFail(jobDisplayName, testSummary)
    } else {
      addSlackMessageForTestSuccess(jobDisplayName, testSummary)
    }
  }
}

pipeline {
  agent any

  environment {
    serverAddress = "http://172.26.156.29:8080"
    credentialsId = 'jenkins-bot'
  }

  stages {

    stage('check'){
      steps {
        script {
          slackAttachments = ''

          setSlackMessageForJob('report_success', 'First Test Suite')
          setSlackMessageForJob('report_failed', 'Second Test Suite')
          setSlackMessageForJob('slack_test', 'Third Test Suite')
        }
      }
    }

    stage('report') {
      steps {
        slackSend message: "Daily status summary", attachments: "[${slackAttachments}]"
      }
    }

  }
}