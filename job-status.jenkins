import groovy.json.JsonSlurper
import java.lang.Integer

// def getJobSummary(String jobName, String jobResult, String jobUrl) {
//   if (jobResult == "SUCCESS") {
//     return "\u2714 ${jobName} succeeded"
//   } else {
//     anyFailed = true
//   }

//   return "\u274C ${jobName} failed (<${jobUrl}|Jenkins>)"
// }

// def getJobStatusSummary(String jobName){
//   def response = httpRequest url: "${env.serverAddress}/job/${jobName}/lastBuild/api/json", authentication: env.credentialsId
//   def json = new JsonSlurper().parseText(response.getContent())

//   def result = json['result']
//   def displayName = json['fullDisplayName']
//   def url = json['url']

//   return getJobSummary(displayName, result, url)
// }

def getTestSummaryForJob(String jobName, String jobDisplayName) {
  script {
    def response

    try {
      response = httpRequest url: "${env.serverAddress}/job/${jobName}/lastCompletedBuild/testReport/api/json", authentication: env.credentialsId
    } catch(Exception e) {
      return "\u274C [${jobName}] No tests were recorded"
    }
    
    def tests = new JsonSlurper().parseText(response.getContent())
    def failCount = tests['failCount'] as Integer
    def passCount = tests['passCount'] as Integer
    def skipCount = tests['skipCount'] as Integer
    def totalCount = failCount + passCount + skipCount

    def prefix = "\u2714"
    if (failCount > 0 || totalCount == 0) {
      prefix = "\u274C"
    }

    return "${prefix} [${jobName}] Failed ${failCount}, Skipped ${skipCount}, Total: ${totalCount}"
  }
}

pipeline {
  agent any

  environment {
    serverAddress = "http://172.26.156.29:8080"
    credentialsId = 'jenkins-bot'
  }

  stages {

    stage('check'){
      steps {
        script {
          // jobsToCheck = ['slack_test', 'slack_test_advanced']
          totalSummary = 'Daily status summary:\n'

          first_summary = getTestSummaryForJob('report_success', 'First Test Suite')
          second_summary = getTestSummaryForJob('report_failed', 'Second Test Suite')
          third_summary = getTestSummaryForJob('slack_test', 'Second Test Suite')

          echo "[LOG] TOTAL SUMMARY:\n${first_summary}\n${second_summary}\n${third_summary}"

          // anyFailed = false

          // jobsToCheck.each {
          //   jobSummary = getJobStatusSummary(it)
          //   echo jobSummary

          //   totalSummary = "${totalSummary}\n${jobSummary}"
          // }
        }
      }
    }

    // stage('report') {
    //   steps {
    //     script {
    //       echo "[LOG] TOTAL SUMMARY:\n${totalSummary}"

    //       def color = 'good'
    //       if (anyFailed) {
    //         color = 'danger'
    //       }

    //       slackSend color: color, message: totalSummary
    //     }
    //   }
    // }

  }
}