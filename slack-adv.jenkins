import hudson.tasks.test.AbstractTestResultAction

// def sendSlackNotification(String slackMessage) {
//   script {
//     def color = 'danger'
//     echo "[LOG] currentBuild.result: ${currentBuild.result}"
//     echo "[LOG] currentBuild.currentResult: ${currentBuild.currentResult}"

//     if (currentBuild.currentResult == 'SUCCESS') {
//       color = 'good'
//     } else if (currentBuild.currentResult == 'FAILURE') {
//       color = 'warning'
//     }

//     slackSend color: color, message: "${env.JOB_NAME} (#${env.BUILD_NUMBER}): ${slackMessage} (<${env.BUILD_URL}|Open>)"
//   }
// }

//color: hex or good\danger\warning
def sendSlackNotification(String slackMessage, String slackColor) {
  slackSend color: slackColor, message: "${env.JOB_NAME} (#${env.BUILD_NUMBER}): ${slackMessage} (<${env.BUILD_URL}|Open>)"
}

@NonCPS
def reportTestCounts() {
  AbstractTestResultAction testResultAction =  currentBuild.rawBuild.getAction(AbstractTestResultAction.class)
  if (testResultAction != null) {
    if (testResultAction.failCount > 0) {
      sendSlackNotification slackMessage: "${testResultAction.failCount} test(s) failed (out of ${testResultAction.totalCount})", slackColor: 'warning'
    } else if (testResultAction.totalCount > 0) {
      sendSlackNotification slackMessage: "All tests passed (out of ${testResultAction.totalCount})", slackColor: 'good'
    } else {
      sendSlackNotification slackMessage: "No tests were run", slackColor: 'danger'
    }
  }
}

pipeline {
  agent {
    label 'windows || windows-slave'
  }

  stages {

    stage ('Tests') {
      steps {
        catchError {
          // nunit testResultsPattern: 'custom_files/testResultsFailed.xml', failIfNoResults: true
          nunit testResultsPattern: 'custom_files/testResultsSuccess.xml', failIfNoResults: true
        }
        
        reportTestCounts()
      }

      // post {
      //   success {
      //     sendSlackNotification 'All tests passed.'
      //   }

      //   failure {
      //     sendSlackNotification 'Tests failed.'
      //   }

      //   aborted {
      //     sendSlackNotification 'Tests were aborted.'
      //   }
      // }
    }

  }
}